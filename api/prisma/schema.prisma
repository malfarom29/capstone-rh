// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IndicentTypes {
  id        String     @id @default(uuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Incident  Incident[]

  @@map("indicent_types")
}

model Country {
  id        String   @id @default(uuid())
  name      String
  iso2      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  City      City[]

  @@map("countries")
}

model City {
  id        String     @id @default(uuid())
  name      String
  countryId String
  country   Country    @relation(fields: [countryId], references: [id])
  Incident  Incident[]

  @@map("cities")
}

model Location {
  id       String     @id @default(uuid())
  name     String
  Incident Incident[]

  @@map("locations")
}

model Incident {
  id             String   @id @default(uuid())
  incidentTypeId String   @map("incident_type_id")
  cityId         String   @map("city_id")
  locationId     String   @map("location_id")
  age            Int?
  gender         String?
  reportMonth    Int?     @map("report_month")
  reportYear     Int?     @map("report_year")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  incidentType IndicentTypes @relation(fields: [incidentTypeId], references: [id])
  city         City          @relation(fields: [cityId], references: [id])
  location     Location      @relation(fields: [locationId], references: [id])

  @@map("incidents")
}
